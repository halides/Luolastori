        -:    0:Source:luolastori.cpp
        -:    0:Graph:luolastori.gcno
        -:    0:Data:luolastori.gcda
        -:    0:Runs:1
        -:    1:#include "luolastori.hpp"
        -:    2:#include <time.h>
        -:    3:#include <stdlib.h>
        -:    4:#include <iostream>
        -:    5:
        1:    6:Luola::Luola() {
        1:    7:	srand(time(NULL));
        1:    8:	suunnat[0] = 0;
        1:    9:	suunnat[1] = 1;
        1:   10:	suunnat[2] = 2;
        1:   11:	suunnat[3] = 3;
        1:   12:	monesko = 1;
        -:   13:
       22:   14:        for (int i = 0; i < LUOLASTON_KOKO; i++) {
      462:   15:                for (int j = 0; j < LUOLASTON_KOKO; j++) {
      441:   16:                        tayta(i,j);
        -:   17:                }
        -:   18:        }
        1:   19:}
        -:   20:
        -:   21:
    #####:   22:void Luola::tulosta() {
    #####:   23:        for (int i = 0; i < LUOLASTON_KOKO; i++) { 
    #####:   24:                for (int j = 0; j < LUOLASTON_KOKO; j++) { 
        -:   25://                        std::cout << char(47+tila(j,i)); 
    #####:   26:                        std::cout << (tila(j,i)?" ":"X");
        -:   27:                } 
    #####:   28:                std::cout << std::endl; 
        -:   29:        }
    #####:   30:}
        -:   31:
        -:   32:
      627:   33:void Luola::vuole(int x, int y) {
      627:   34:	luola[x][y] = monesko;
      627:   35:}
        -:   36:
        -:   37:
      495:   38:void Luola::tayta(int x, int y) {
      495:   39:	luola[x][y] = 0;
      495:   40:}
        -:   41:
        -:   42:
     9629:   43:int Luola::tila(int x, int y) {
     9629:   44:	return luola[x][y];
        -:   45:}
        -:   46:
        -:   47:
        3:   48:void Luola::tee_huone(bool pinoa) {
        3:   49:	int x = ((rand() % ((LUOLASTON_KOKO-HUONEEN_KOKO-1)/2)) * 2 + 1);
        3:   50:	int y = ((rand() % ((LUOLASTON_KOKO-HUONEEN_KOKO-1)/2)) * 2 + 1);
        3:   51:	int sivu = rand() % HUONEEN_KOKO * 2 + 3;
        3:   52:	int sivu2 = rand() % HUONEEN_KOKO * 2 + 3;
       3*:   53:	if (x+sivu > LUOLASTON_KOKO-1) return;
       3*:   54:	if (y+sivu2 > LUOLASTON_KOKO-1) return;
        3:   55:	if (pinoa == false) {
        3:   56:		int xx = x;
        3:   57:		int yy = y;
        3:   58:		int xs = x+sivu;
        3:   59:		int ys = y+sivu2;
       3*:   60:		if (x<3) xx = 3;
        3:   61:		if (y<3) yy = 3;
       3*:   62:		if (x+sivu > LUOLASTON_KOKO-2) xs=LUOLASTON_KOKO-2;
       3*:   63:		if (y+sivu2 > LUOLASTON_KOKO-2) ys=LUOLASTON_KOKO-2;
        -:   64:
       16:   65:		for (int i = xx; i<xs; i++) {
       42:   66:			for (int j = yy; j<ys; j++) {
       29:   67:				if (tila(i,j)) {
        -:   68://	std::cout << "en tehny: " << x << " " << y << " " << sivu << " " << sivu2 << " " << std::endl << "koska: " << i << " ja " << j << std::endl;
    #####:   69:					return;
        -:   70:				}
        -:   71:			}
        -:   72:		}
        -:   73:	}
        -:   74://	std::cout << "    teen: " << x << " " << y << " " << sivu << " " << sivu2 << " " << std::endl;
       16:   75:	for (int i = x; i<x+sivu; i++) {
       52:   76:		for (int j = y; j<y+sivu2; j++) {
       39:   77:			vuole(i,j);
        -:   78:		}
        -:   79:	}
        3:   80:	monesko++;
        -:   81:}
        -:   82:
        -:   83:
        1:   84:void Luola::tee_sokkelot() {
       11:   85:	for (int i = 1; i<LUOLASTON_KOKO-1; i+=2) {
      110:   86:		for (int j = 1; j<LUOLASTON_KOKO-1; j+=2) {
      100:   87:			if (tila(i,j) == 0) {
        1:   88:				tee_sokkelo(i,j);
        1:   89:				monesko++;
        -:   90:			}
        -:   91:		}
        -:   92:	}
        1:   93:}
        -:   94:
        -:   95:
        1:   96:void Luola::poista_umpikujat() {
       74:   97:	for (int i = 1; i<LUOLASTON_KOKO-1; i+=1) {
     1514:   98:		for (int j = 1; j<LUOLASTON_KOKO-1; j+=1) {
        -:   99://			if (i == 1 && j == 1) continue;
        -:  100://			if (i == LUOLASTON_KOKO-1 && j == LUOLASTON_KOKO-1) continue;
     1441:  101:			int laskuri = 0;
     1441:  102:			if (tila(i,j) > 0) {
      546:  103:				if(tila(i+1,j) == 0) laskuri++;
      546:  104:				if(tila(i-1,j) == 0) laskuri++;
      546:  105:				if(tila(i,j+1) == 0) laskuri++;
      546:  106:				if(tila(i,j-1) == 0) laskuri++;
      546:  107:				if(laskuri > 2) {
       54:  108:					tayta(i,j);
       54:  109:					i--;
       54:  110:					j--;
        -:  111:				}
        -:  112:			}
        -:  113:		}
        -:  114:	}
        1:  115:}
        -:  116:
        -:  117:
        1:  118:void Luola::puhko() {
       20:  119:	for (int i = 1; i<LUOLASTON_KOKO-1; i+=1) {
      380:  120:		for (int j = 1; j<LUOLASTON_KOKO-1; j+=1) {
      361:  121:			if (tila(j,i) == 0) {
      155:  122:				int t = tila(j-1,i);
      155:  123:				int t2 = tila(j+1,i);
      155:  124:				if (t) {
       76:  125:					if (t2 && t2 != t) {
        3:  126:						monesko = t;
        3:  127:						fillaa(j,i);
        -:  128:					}
        -:  129:				}
        -:  130:			}
        -:  131:		}
        -:  132:	}
        1:  133:}
        -:  134:
        -:  135:
       42:  136:void Luola::fillaa(int x, int y) {
       42:  137:	vuole(x,y);
       42:  138:	if (tila(x+1,y) > 0 && tila(x+1,y) != monesko) fillaa(x+1,y);
       42:  139:	if (tila(x-1,y) > 0 && tila(x-1,y) != monesko) fillaa(x-1,y);
       42:  140:	if (tila(x,y+1) > 0 && tila(x,y+1) != monesko) fillaa(x,y+1);
      42*:  141:	if (tila(x,y-1) > 0 && tila(x,y-1) != monesko) fillaa(x,y-1);
       42:  142:}
        -:  143:
        -:  144:
      379:  145:void Luola::fillaa_testille(int x, int y, int *laskuri) {
      379:  146:	vuole(x,y);
      379:  147:	if (tila(x+1,y) > 0 && tila(x+1,y) != monesko) {(*laskuri)++; fillaa_testille(x+1,y,laskuri);}
      379:  148:	if (tila(x-1,y) > 0 && tila(x-1,y) != monesko) {(*laskuri)++; fillaa_testille(x-1,y,laskuri);}
      379:  149:	if (tila(x,y+1) > 0 && tila(x,y+1) != monesko) {(*laskuri)++; fillaa_testille(x,y+1,laskuri);}
      379:  150:	if (tila(x,y-1) > 0 && tila(x,y-1) != monesko) {(*laskuri)++; fillaa_testille(x,y-1,laskuri);}
      379:  151:}
        -:  152:
        -:  153:
       84:  154:int* Luola::sotke() {
        -:  155:	int vali;
       84:  156:	if (rand()%2) {
       39:  157:		vali = suunnat[0];
       39:  158:		suunnat[0] = suunnat[3];
       39:  159:		suunnat[3] = vali;
        -:  160:	}
       84:  161:	if (rand()%2) {
       39:  162:		vali = suunnat[0];
       39:  163:		suunnat[0] = suunnat[2];
       39:  164:		suunnat[2] = vali;
        -:  165:	}
       84:  166:	if (rand()%2) {
       43:  167:		vali = suunnat[0];
       43:  168:		suunnat[0] = suunnat[1];
       43:  169:		suunnat[1] = vali;
        -:  170:	}
       84:  171:	return suunnat;
        -:  172://	std::cout << suunnat[0] << suunnat[1] << suunnat[2] << suunnat[3] << std::endl;
        -:  173:}
        -:  174:
       84:  175:void Luola::tee_sokkelo(int x, int y) {
       84:  176:	vuole(x,y);
       84:  177:	int* heh = sotke();
        -:  178:	int mun_suunnat[4];
       84:  179:	mun_suunnat[0] = heh[0];
       84:  180:	mun_suunnat[1] = heh[1];
       84:  181:	mun_suunnat[2] = heh[2];
       84:  182:	mun_suunnat[3] = heh[3];
        -:  183:
      420:  184:	for (int i=0; i<4; i++) {
      336:  185:		int suunta = mun_suunnat[i];
      336:  186:		switch(suunta) {
       84:  187:		case 0:
       84:  188:			if ((x+2<LUOLASTON_KOKO) && tila(x+2,y) == 0) {
       21:  189:				vuole(x+1,y);
       21:  190:				tee_sokkelo(x+2,y);
        -:  191:			}
       84:  192:		break;
       84:  193:		case 1:
       84:  194:			if ((x-2>0) && tila(x-2,y) == 0) {
       21:  195:				vuole(x-1,y);
       21:  196:				tee_sokkelo(x-2,y);
        -:  197:			}
       84:  198:		break;
       84:  199:		case 2:
       84:  200:			if ((y+2<LUOLASTON_KOKO) && tila(x,y+2) == 0) {
       22:  201:				vuole(x,y+1);
       22:  202:				tee_sokkelo(x,y+2);
        -:  203:			}
       84:  204:		break;
       84:  205:		case 3:
       84:  206:			if ((y-2>0) && tila(x,y-2) == 0) {
       19:  207:				vuole(x,y-1);
       19:  208:				tee_sokkelo(x,y-2);
        -:  209:			}
       84:  210:		break;
        -:  211:		}
        -:  212:	}
       84:  213:}
        -:  214:
        -:  215:
        4:  216:int Luola::montako_tyhjaa() {
        4:  217:	int laskuri = 0;
       88:  218:	for(int i=0;i < LUOLASTON_KOKO; i++) {
     1848:  219:		for(int j=0;j < LUOLASTON_KOKO; j++) {
     1764:  220:			if (tila(j,i) > 0) laskuri++;
        -:  221:		}
        -:  222:	}
        4:  223:	return laskuri;
        -:  224:}
        -:  225:
        -:  226:
        4:  227:int Luola::moneenko_fillaa() {
        4:  228:	testi_laskuri = 0;
        4:  229:	monesko++;
        4:  230:	int jatka = 0;
       29:  231:	for (int i = 1; i < LUOLASTON_KOKO-1; i++) {
      513:  232:		for (int j = 1; j < LUOLASTON_KOKO-1; j++) {
      488:  233:			if (tila(i,j)>0) {
        3:  234:				testi_laskuri = 1;
        3:  235:				fillaa_testille(i,j,&testi_laskuri);
        3:  236:				jatka = 1;
        -:  237:			}
      488:  238:		if (jatka) break;
        -:  239:		}
       28:  240:	if (jatka) break;
        -:  241:	}
        4:  242:	monesko++;
        4:  243:	return testi_laskuri;
        -:  244:}
